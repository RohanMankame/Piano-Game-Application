/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Piano_Keyboard;


//import  sun.audio.AudioPlayer; // DOSE NOT WORK FOR JDK 9 or ABOVE NEED TO REDO MUSIC PLAYER
//import sun.aduio.AudioStream;
 
import cmpsc221.projects.TestDBConnection;

import java.sql.*;
import java.io.File;
import java.io.FileInputStream;
import java.io.InputStream;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.sound.sampled.AudioInputStream;
import javax.sound.sampled.AudioSystem;
import javax.sound.sampled.Clip;
import javax.swing.JFrame;
import javax.swing.JOptionPane;  
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author Rohan_nu3d8wo
 */
public class Piano_Keys extends javax.swing.JFrame {

    /**
     * Creates new form Piano_Keys
     */
    
    private static final String username = "root";
    private static final String password = "rohan";
    private static final String dataConn = "jdbc:mysql://127.0.0.1:3306/connector1";
    
    Connection sqlConn = null;
    PreparedStatement pst = null;
    ResultSet rs = null;
    int q,i,id,deleteItem;
    String StrButtonsListsb;
    String StrButtonsListb;
    
    
    
    
    
    public ArrayList<String> ButtonsList;
    
    //For timer
    public int miliSec = 0;
    public int sec = 0;
    public int min = 0;
    public int hour = 0;
    static boolean state = false;

    
    
    
    public Piano_Keys() {
        initComponents();
        
        ButtonsList = new ArrayList<>(); // Add button into array list when clicked
        
        setSize(800,800);
        
    }

    
    
    public void upDateDB(){
        
        try{
            Class.forName("com.mysql.jdbc.Driver");
            sqlConn = DriverManager.getConnection(dataConn,username,password);
            pst = sqlConn.prepareStatement("Select * from connector1");
            
            rs = pst.executeQuery();
            ResultSetMetaData stData = rs.getMetaData();
            
            q = stData.getColumnCount();
            
            DefaultTableModel RecordTable = (DefaultTableModel)jTable1.getModel();
                    RecordTable.setRowCount(0);
                    
            while(rs.next()){
                Vector columData = new Vector();
                
                for (i=1; i<=q;i++){
                    columData.add(rs.getString("id"));
                    columData.add(rs.getString("SongName"));
                    columData.add(rs.getString("ArtistName"));
                    columData.add(rs.getString("SongNotes"));
                    
                }
                RecordTable.addRow(columData);
            }
        }
        catch(Exception ex){
          JOptionPane.showMessageDialog(null, ex);
        }
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        CSharpButton = new javax.swing.JButton();
        CButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        DSharpButton = new javax.swing.JButton();
        FSharpButton = new javax.swing.JButton();
        DButton = new javax.swing.JButton();
        EButton = new javax.swing.JButton();
        FButton = new javax.swing.JButton();
        GSharpButton = new javax.swing.JButton();
        ASharpButton = new javax.swing.JButton();
        BButton = new javax.swing.JButton();
        GButton = new javax.swing.JButton();
        AButton = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        PianoCheck = new javax.swing.JCheckBox();
        DrumCheck = new javax.swing.JCheckBox();
        jPanel3 = new javax.swing.JPanel();
        jButton4 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        RecordB = new javax.swing.JButton();
        PauseB = new javax.swing.JButton();
        StopB = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        Hour = new javax.swing.JLabel();
        Sec = new javax.swing.JLabel();
        Min = new javax.swing.JLabel();
        MSec = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jTextNotePlayed = new javax.swing.JTextField();
        ASharpButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel6 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jTextMusicName = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jTextName = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        DELETEB = new javax.swing.JButton();
        UPDATEB = new javax.swing.JButton();
        EXITB = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jTextms = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jPanel8 = new javax.swing.JPanel();
        jButton5 = new javax.swing.JButton();
        jTextNote = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(null);

        jPanel1.setBackground(new java.awt.Color(102, 102, 102));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204), 8));
        jPanel1.setLayout(null);

        CSharpButton.setBackground(new java.awt.Color(51, 51, 51));
        CSharpButton.setForeground(new java.awt.Color(204, 204, 204));
        CSharpButton.setText("C#");
        CSharpButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CSharpButtonActionPerformed(evt);
            }
        });
        jPanel1.add(CSharpButton);
        CSharpButton.setBounds(60, 130, 47, 110);

        CButton.setText("C");
        CButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CButtonActionPerformed(evt);
            }
        });
        jPanel1.add(CButton);
        CButton.setBounds(30, 130, 60, 250);

        jLabel1.setFont(new java.awt.Font("Times New Roman", 3, 48)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(204, 204, 204));
        jLabel1.setText("KEYBOARD SIMULATOR");
        jPanel1.add(jLabel1);
        jLabel1.setBounds(120, 20, 580, 50);

        DSharpButton.setBackground(new java.awt.Color(51, 51, 51));
        DSharpButton.setForeground(new java.awt.Color(204, 204, 204));
        DSharpButton.setText("D#");
        DSharpButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DSharpButtonActionPerformed(evt);
            }
        });
        jPanel1.add(DSharpButton);
        DSharpButton.setBounds(120, 130, 50, 110);

        FSharpButton.setBackground(new java.awt.Color(51, 51, 51));
        FSharpButton.setForeground(new java.awt.Color(204, 204, 204));
        FSharpButton.setText("F#");
        FSharpButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FSharpButtonActionPerformed(evt);
            }
        });
        jPanel1.add(FSharpButton);
        FSharpButton.setBounds(240, 130, 50, 110);

        DButton.setText("D");
        DButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DButtonActionPerformed(evt);
            }
        });
        jPanel1.add(DButton);
        DButton.setBounds(90, 130, 60, 250);

        EButton.setText("E");
        EButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EButtonActionPerformed(evt);
            }
        });
        jPanel1.add(EButton);
        EButton.setBounds(150, 130, 60, 250);

        FButton.setText("F");
        FButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FButtonActionPerformed(evt);
            }
        });
        jPanel1.add(FButton);
        FButton.setBounds(210, 130, 60, 250);

        GSharpButton.setBackground(new java.awt.Color(51, 51, 51));
        GSharpButton.setForeground(new java.awt.Color(204, 204, 204));
        GSharpButton.setText("G#");
        GSharpButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GSharpButtonActionPerformed(evt);
            }
        });
        jPanel1.add(GSharpButton);
        GSharpButton.setBounds(300, 130, 50, 110);

        ASharpButton.setBackground(new java.awt.Color(51, 51, 51));
        ASharpButton.setForeground(new java.awt.Color(204, 204, 204));
        ASharpButton.setText("A#");
        ASharpButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ASharpButtonActionPerformed(evt);
            }
        });
        jPanel1.add(ASharpButton);
        ASharpButton.setBounds(360, 130, 50, 110);

        BButton.setText("B");
        BButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BButtonActionPerformed(evt);
            }
        });
        jPanel1.add(BButton);
        BButton.setBounds(390, 130, 60, 250);

        GButton.setText("G");
        GButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GButtonActionPerformed(evt);
            }
        });
        jPanel1.add(GButton);
        GButton.setBounds(270, 130, 60, 250);

        AButton.setText("A");
        AButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AButtonActionPerformed(evt);
            }
        });
        jPanel1.add(AButton);
        AButton.setBounds(330, 130, 60, 250);

        jLabel3.setBackground(new java.awt.Color(102, 102, 102));
        jLabel3.setForeground(new java.awt.Color(204, 204, 204));
        jLabel3.setText("Please select a instrument:");
        jPanel1.add(jLabel3);
        jLabel3.setBounds(30, 70, 200, 20);

        jPanel5.setBackground(new java.awt.Color(51, 51, 51));
        jPanel5.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBackground(new java.awt.Color(51, 51, 51));

        PianoCheck.setBackground(new java.awt.Color(102, 102, 102));
        buttonGroup1.add(PianoCheck);
        PianoCheck.setForeground(new java.awt.Color(204, 204, 204));
        PianoCheck.setText("Piano ");
        jPanel2.add(PianoCheck);

        DrumCheck.setBackground(new java.awt.Color(102, 102, 102));
        buttonGroup1.add(DrumCheck);
        DrumCheck.setForeground(new java.awt.Color(204, 204, 204));
        DrumCheck.setText("Rhodes (Long)");
        jPanel2.add(DrumCheck);

        jPanel5.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 10, -1, -1));

        jPanel3.setBackground(new java.awt.Color(51, 51, 51));

        jButton4.setBackground(new java.awt.Color(51, 51, 51));
        jButton4.setForeground(new java.awt.Color(255, 255, 255));
        jButton4.setText("clear recording");
        jButton4.setPreferredSize(new java.awt.Dimension(221, 23));
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        jPanel3.add(jButton4);

        jButton2.setBackground(new java.awt.Color(51, 51, 51));
        jButton2.setForeground(new java.awt.Color(255, 255, 255));
        jButton2.setText("Play Back Current Recording");
        jButton2.setPreferredSize(new java.awt.Dimension(221, 23));
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel3.add(jButton2);

        jPanel5.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 230, 260, 60));

        jPanel4.setBackground(new java.awt.Color(51, 51, 51));

        RecordB.setBackground(new java.awt.Color(51, 51, 51));
        RecordB.setForeground(new java.awt.Color(255, 255, 255));
        RecordB.setText("Record / Continue Recording ");
        RecordB.setPreferredSize(new java.awt.Dimension(221, 23));
        RecordB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RecordBActionPerformed(evt);
            }
        });
        jPanel4.add(RecordB);

        PauseB.setBackground(new java.awt.Color(51, 51, 51));
        PauseB.setForeground(new java.awt.Color(255, 255, 255));
        PauseB.setText("Pause");
        PauseB.setPreferredSize(new java.awt.Dimension(221, 23));
        PauseB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PauseBActionPerformed(evt);
            }
        });
        jPanel4.add(PauseB);

        StopB.setBackground(new java.awt.Color(51, 51, 51));
        StopB.setForeground(new java.awt.Color(255, 255, 255));
        StopB.setText("Stop Recording");
        StopB.setPreferredSize(new java.awt.Dimension(221, 23));
        StopB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                StopBActionPerformed(evt);
            }
        });
        jPanel4.add(StopB);

        jLabel7.setFont(new java.awt.Font("Calibri Light", 0, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Timer:");
        jPanel4.add(jLabel7);

        Hour.setFont(new java.awt.Font("Calibri", 3, 18)); // NOI18N
        Hour.setForeground(new java.awt.Color(255, 255, 255));
        Hour.setText("00 :");
        jPanel4.add(Hour);

        Sec.setFont(new java.awt.Font("Calibri", 3, 18)); // NOI18N
        Sec.setForeground(new java.awt.Color(255, 255, 255));
        Sec.setText("00:");
        jPanel4.add(Sec);

        Min.setFont(new java.awt.Font("Calibri", 3, 18)); // NOI18N
        Min.setForeground(new java.awt.Color(255, 255, 255));
        Min.setText("00:");
        jPanel4.add(Min);

        MSec.setFont(new java.awt.Font("Calibri", 3, 18)); // NOI18N
        MSec.setForeground(new java.awt.Color(255, 255, 255));
        MSec.setText("00");
        jPanel4.add(MSec);

        jPanel5.add(jPanel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 120, 270, 110));

        jButton3.setText("Empty sound key ");
        jButton3.setToolTipText("");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel5.add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 10, 180, -1));

        jLabel8.setBackground(new java.awt.Color(0, 0, 0));
        jLabel8.setFont(new java.awt.Font("Calibri Light", 0, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Current key Pessed:");
        jPanel5.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 30, 150, 30));

        jTextNotePlayed.setBackground(new java.awt.Color(102, 102, 102));
        jTextNotePlayed.setFont(new java.awt.Font("Tahoma", 3, 36)); // NOI18N
        jTextNotePlayed.setForeground(new java.awt.Color(255, 255, 255));
        jTextNotePlayed.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextNotePlayedActionPerformed(evt);
            }
        });
        jPanel5.add(jTextNotePlayed, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 30, 80, 50));

        jPanel1.add(jPanel5);
        jPanel5.setBounds(10, 90, 740, 300);

        ASharpButton1.setBackground(new java.awt.Color(51, 51, 51));
        ASharpButton1.setForeground(new java.awt.Color(204, 204, 204));
        ASharpButton1.setText("A#");
        ASharpButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ASharpButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(ASharpButton1);
        ASharpButton1.setBounds(360, 130, 50, 110);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Song Name", "Artist Name", "Song notes"
            }
        ));
        jTable1.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jPanel1.add(jScrollPane1);
        jScrollPane1.setBounds(30, 480, 410, 240);

        jPanel6.setBackground(new java.awt.Color(102, 102, 102));

        jLabel2.setBackground(new java.awt.Color(0, 0, 0));
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Enter Muisc Name:");
        jPanel6.add(jLabel2);

        jTextMusicName.setMinimumSize(new java.awt.Dimension(50, 20));
        jTextMusicName.setPreferredSize(new java.awt.Dimension(90, 25));
        jTextMusicName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextMusicNameActionPerformed(evt);
            }
        });
        jPanel6.add(jTextMusicName);

        jLabel4.setBackground(new java.awt.Color(0, 0, 0));
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Enter Artist Name:");
        jPanel6.add(jLabel4);

        jTextName.setPreferredSize(new java.awt.Dimension(90, 25));
        jPanel6.add(jTextName);

        jButton1.setBackground(new java.awt.Color(0, 0, 0));
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("Save Transcript of Current Recorded audio");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel6.add(jButton1);

        DELETEB.setBackground(new java.awt.Color(0, 0, 0));
        DELETEB.setForeground(new java.awt.Color(255, 255, 255));
        DELETEB.setText("Delete Recording");
        DELETEB.setPreferredSize(new java.awt.Dimension(221, 23));
        DELETEB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DELETEBActionPerformed(evt);
            }
        });
        jPanel6.add(DELETEB);

        UPDATEB.setBackground(new java.awt.Color(0, 0, 0));
        UPDATEB.setForeground(new java.awt.Color(255, 255, 255));
        UPDATEB.setText("Update Current recording");
        UPDATEB.setPreferredSize(new java.awt.Dimension(221, 23));
        UPDATEB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UPDATEBActionPerformed(evt);
            }
        });
        jPanel6.add(UPDATEB);

        jPanel1.add(jPanel6);
        jPanel6.setBounds(460, 520, 280, 160);

        EXITB.setBackground(new java.awt.Color(0, 0, 0));
        EXITB.setForeground(new java.awt.Color(255, 255, 255));
        EXITB.setText("EXIT");
        EXITB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EXITBActionPerformed(evt);
            }
        });
        jPanel1.add(EXITB);
        EXITB.setBounds(680, 690, 55, 23);

        jPanel7.setBackground(new java.awt.Color(102, 102, 102));

        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Set Time(ms) between key Notes");
        jPanel7.add(jLabel5);

        jTextms.setText("1500");
        jTextms.setToolTipText("");
        jTextms.setPreferredSize(new java.awt.Dimension(90, 25));
        jTextms.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextmsActionPerformed(evt);
            }
        });
        jPanel7.add(jTextms);

        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("(1500ms = 1.5seconds)");
        jPanel7.add(jLabel6);

        jPanel1.add(jPanel7);
        jPanel7.setBounds(470, 410, 260, 60);

        jPanel8.setBackground(new java.awt.Color(102, 102, 102));

        jButton5.setBackground(new java.awt.Color(51, 51, 51));
        jButton5.setForeground(new java.awt.Color(255, 255, 255));
        jButton5.setText("Show Current Notes");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        jPanel8.add(jButton5);

        jTextNote.setText("(click button to view current recorded notes)");
        jTextNote.setPreferredSize(new java.awt.Dimension(400, 25));
        jPanel8.add(jTextNote);

        jPanel1.add(jPanel8);
        jPanel8.setBounds(30, 400, 410, 70);

        getContentPane().add(jPanel1);
        jPanel1.setBounds(10, 10, 760, 740);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void CButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CButtonActionPerformed
        // TODO add your handling code here:
        jTextNotePlayed.setText("C");
        Csound();
        
    }//GEN-LAST:event_CButtonActionPerformed

    private void Csound(){
               InputStream AudioPlay;
         
        if (PianoCheck.isSelected() )
        {
         try{
             File musicPath = new File("C:\\Users\\Rohan_nu3d8wo\\OneDrive\\Documents\\NetBeansProjects\\Piano_Project\\src\\Piano_Keyboard\\C.wav"); // Opens C.wav audio file
             
             if(musicPath.exists()){
                 
                 AudioInputStream aduioInput = AudioSystem.getAudioInputStream(musicPath);
                 Clip clip = AudioSystem.getClip();
                 clip.open(aduioInput);
                 clip.start();
                 

                 
                 
                 
             }else
             {
                 System.out.println("Cant Find File"); //Cant find file
             }
             
         }
         catch(Exception e){
             JOptionPane.showMessageDialog(null,e);
         }
        }
        
         if (DrumCheck.isSelected() )
        {
         try{
             File musicPath = new File("C:\\Users\\Rohan_nu3d8wo\\OneDrive\\Documents\\NetBeansProjects\\Piano_Project\\src\\Piano_Keyboard\\RC.wav"); // Opens C.wav audio file
             
             if(musicPath.exists()){
                 
                 AudioInputStream aduioInput = AudioSystem.getAudioInputStream(musicPath);
                 Clip clip = AudioSystem.getClip();
                 clip.open(aduioInput);
                 clip.start();
                 
               
                 
                 
             }else
             {
                 System.out.println("Cant Find File"); //Cant find file
             }
             
         }
         catch(Exception e){
             JOptionPane.showMessageDialog(null,e);
         }
        }
         
        if (state == true){
                ButtonsList.add("C");// Add button into button list as clicked
                 } 
    }
    
    private void CSharpButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CSharpButtonActionPerformed
        jTextNotePlayed.setText("C#");
        CSsound();
        
    }//GEN-LAST:event_CSharpButtonActionPerformed

    private void CSsound(){
            // TODO add your handling code here:
        if (PianoCheck.isSelected())
        {
         try{
             File musicPath = new File("C:\\Users\\Rohan_nu3d8wo\\OneDrive\\Documents\\NetBeansProjects\\Piano_Project\\src\\Piano_Keyboard\\C#.wav");
             
             if(musicPath.exists()){
                 
                 AudioInputStream aduioInput = AudioSystem.getAudioInputStream(musicPath);
                 Clip clip = AudioSystem.getClip();
                 clip.open(aduioInput);
                 clip.start();
                 

                
             }else
             {
                 System.out.println("Cant Find File"); //Cant find file
             }
             
         }
         catch(Exception e){
             JOptionPane.showMessageDialog(null,e);
         }
        }
        
                 if (DrumCheck.isSelected() )
        {
         try{
             File musicPath = new File("C:\\Users\\Rohan_nu3d8wo\\OneDrive\\Documents\\NetBeansProjects\\Piano_Project\\src\\Piano_Keyboard\\RC#.wav"); // Opens C.wav audio file
             
             if(musicPath.exists()){
                 
                 AudioInputStream aduioInput = AudioSystem.getAudioInputStream(musicPath);
                 Clip clip = AudioSystem.getClip();
                 clip.open(aduioInput);
                 clip.start();
                 

                 
                 
             }else
             {
                 System.out.println("Cant Find File"); //Cant find file
             }
             
         }
         catch(Exception e){
             JOptionPane.showMessageDialog(null,e);
         }
        }
               if (state == true){
                ButtonsList.add("C#");// Add button into button list as clicked
                 }
    }
    
    
    private void DButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DButtonActionPerformed
        // TODO add your handling code here:
        Dsound();
        jTextNotePlayed.setText("D");
    }//GEN-LAST:event_DButtonActionPerformed

    private void Dsound(){
               if (PianoCheck.isSelected())       {
         try{
             File musicPath = new File("C:\\Users\\Rohan_nu3d8wo\\OneDrive\\Documents\\NetBeansProjects\\Piano_Project\\src\\Piano_Keyboard\\D.wav");
             
             if(musicPath.exists()){
                 
                 AudioInputStream aduioInput = AudioSystem.getAudioInputStream(musicPath);
                 Clip clip = AudioSystem.getClip();
                 clip.open(aduioInput);
                 clip.start();
                 

                 
                 
             }else
             {
                 System.out.println("Cant Find File"); //Cant find file
             }
             
         }
         catch(Exception e){
             JOptionPane.showMessageDialog(null,e);
         }
        }
                  if (DrumCheck.isSelected() )
        {
         try{
             File musicPath = new File("C:\\Users\\Rohan_nu3d8wo\\OneDrive\\Documents\\NetBeansProjects\\Piano_Project\\src\\Piano_Keyboard\\RD.wav"); // Opens C.wav audio file
             
             if(musicPath.exists()){
                 
                 AudioInputStream aduioInput = AudioSystem.getAudioInputStream(musicPath);
                 Clip clip = AudioSystem.getClip();
                 clip.open(aduioInput);
                 clip.start();
                 

                 
                 
             }else
             {
                 System.out.println("Cant Find File"); //Cant find file
             }
             
         }
         catch(Exception e){
             JOptionPane.showMessageDialog(null,e);
         }
        }
                if (state == true){
                ButtonsList.add("D");// Add button into button list as clicked
                 }  
    }
    
    
    private void DSharpButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DSharpButtonActionPerformed

        DSsound();
        jTextNotePlayed.setText("D#");
    }//GEN-LAST:event_DSharpButtonActionPerformed

    private void DSsound(){
            // TODO add your handling code here:
           if (PianoCheck.isSelected())      {
         try{
             File musicPath = new File("C:\\Users\\Rohan_nu3d8wo\\OneDrive\\Documents\\NetBeansProjects\\Piano_Project\\src\\Piano_Keyboard\\D#.wav");
             
             if(musicPath.exists()){
                 
                 AudioInputStream aduioInput = AudioSystem.getAudioInputStream(musicPath);
                 Clip clip = AudioSystem.getClip();
                 clip.open(aduioInput);
                 clip.start();
                 
                
                 
                
             }else
             {
                 System.out.println("Cant Find File"); //Cant find file
             }
             
         }
         catch(Exception e){
             JOptionPane.showMessageDialog(null,e);
         }
        }
                    if (DrumCheck.isSelected() )
        {
         try{
             File musicPath = new File("C:\\Users\\Rohan_nu3d8wo\\OneDrive\\Documents\\NetBeansProjects\\Piano_Project\\src\\Piano_Keyboard\\RD#.wav"); // Opens C.wav audio file
             
             if(musicPath.exists()){
                 
                 AudioInputStream aduioInput = AudioSystem.getAudioInputStream(musicPath);
                 Clip clip = AudioSystem.getClip();
                 clip.open(aduioInput);
                 clip.start();
                 
                 
                
                 
                 
             }else
             {
                 System.out.println("Cant Find File"); //Cant find file
             }
             
         }
         catch(Exception e){
             JOptionPane.showMessageDialog(null,e);
         }
        }
              if (state == true){
                ButtonsList.add("D#");// Add button into button list as clicked
                 }
}
    
    
    private void FSharpButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FSharpButtonActionPerformed
        // TODO add your handling code here:
        jTextNotePlayed.setText("F#");
        FSsound();

    }//GEN-LAST:event_FSharpButtonActionPerformed

    private void FSsound(){
          if (PianoCheck.isSelected())       {
         try{
             File musicPath = new File("C:\\Users\\Rohan_nu3d8wo\\OneDrive\\Documents\\NetBeansProjects\\Piano_Project\\src\\Piano_Keyboard\\F#.wav");
             
             if(musicPath.exists()){
                 
                 AudioInputStream aduioInput = AudioSystem.getAudioInputStream(musicPath);
                 Clip clip = AudioSystem.getClip();
                 clip.open(aduioInput);
                 clip.start();
                 
                
                 
                 
             }else
             {
                 System.out.println("Cant Find File"); //Cant find file
             }
             
         }
         catch(Exception e){
             JOptionPane.showMessageDialog(null,e);
         }
        }
                if (DrumCheck.isSelected() )
        {
         try{
             File musicPath = new File("C:\\Users\\Rohan_nu3d8wo\\OneDrive\\Documents\\NetBeansProjects\\Piano_Project\\src\\Piano_Keyboard\\RF#.wav"); // Opens C.wav audio file
             
             if(musicPath.exists()){
                 
                 AudioInputStream aduioInput = AudioSystem.getAudioInputStream(musicPath);
                 Clip clip = AudioSystem.getClip();
                 clip.open(aduioInput);
                 clip.start();
                 
                 
                 
                 
                 
             }else
             {
                 System.out.println("Cant Find File"); //Cant find file
             }
             
         }
         catch(Exception e){
             JOptionPane.showMessageDialog(null,e);
         }
        }
                if (state == true){
                ButtonsList.add("F#");// Add button into button list as clicked
                 }
}
    
    
    private void EButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EButtonActionPerformed
        // TODO add your handling code here:
        jTextNotePlayed.setText("E");
        Esound();
    }//GEN-LAST:event_EButtonActionPerformed

    private void Esound(){
                if (PianoCheck.isSelected())      {
         try{
             File musicPath = new File("C:\\Users\\Rohan_nu3d8wo\\OneDrive\\Documents\\NetBeansProjects\\Piano_Project\\src\\Piano_Keyboard\\E.wav");
             
             if(musicPath.exists()){
                 
                 AudioInputStream aduioInput = AudioSystem.getAudioInputStream(musicPath);
                 Clip clip = AudioSystem.getClip();
                 clip.open(aduioInput);
                 clip.start();
                 
                
                 
             }else
             {
                 System.out.println("Cant Find File"); //Cant find file
             }
             
         }
         catch(Exception e){
             JOptionPane.showMessageDialog(null,e);
         }
        }
          
                if (DrumCheck.isSelected() )
        {
         try{
             File musicPath = new File("C:\\Users\\Rohan_nu3d8wo\\OneDrive\\Documents\\NetBeansProjects\\Piano_Project\\src\\Piano_Keyboard\\RE.wav"); // Opens C.wav audio file
             
             if(musicPath.exists()){
                 
                 AudioInputStream aduioInput = AudioSystem.getAudioInputStream(musicPath);
                 Clip clip = AudioSystem.getClip();
                 clip.open(aduioInput);
                 clip.start();
                 
                 
                 
                 
                 
             }else
             {
                 System.out.println("Cant Find File"); //Cant find file
             }
             
         }
         catch(Exception e){
             JOptionPane.showMessageDialog(null,e);
         }
        }
                if (state == true){
                ButtonsList.add("E");// Add button into button list as clicked
                 }  
    }
    
    
    private void FButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FButtonActionPerformed
        // TODO add your handling code here:
        jTextNotePlayed.setText("F");
        Fsound();

    }//GEN-LAST:event_FButtonActionPerformed

    private void Fsound(){
                  if (PianoCheck.isSelected())      {
         try{
             File musicPath = new File("C:\\Users\\Rohan_nu3d8wo\\OneDrive\\Documents\\NetBeansProjects\\Piano_Project\\src\\Piano_Keyboard\\F.wav");
             
             if(musicPath.exists()){
                 
                 AudioInputStream aduioInput = AudioSystem.getAudioInputStream(musicPath);
                 Clip clip = AudioSystem.getClip();
                 clip.open(aduioInput);
                 clip.start();
                
                 
                 
             }else
             {
                 System.out.println("Cant Find File"); //Cant find file
             }
             
         }
         catch(Exception e){
             JOptionPane.showMessageDialog(null,e);
         }
        }
                   if (DrumCheck.isSelected() )
        {
         try{
             File musicPath = new File("C:\\Users\\Rohan_nu3d8wo\\OneDrive\\Documents\\NetBeansProjects\\Piano_Project\\src\\Piano_Keyboard\\RF.wav"); // Opens C.wav audio file
             
             if(musicPath.exists()){
                 
                 AudioInputStream aduioInput = AudioSystem.getAudioInputStream(musicPath);
                 Clip clip = AudioSystem.getClip();
                 clip.open(aduioInput);
                 clip.start();
                 
                 
                 
                 
                 
             }else
             {
                 System.out.println("Cant Find File"); //Cant find file
             }
             
         }
         catch(Exception e){
             JOptionPane.showMessageDialog(null,e);
         }
        }
                if (state == true){
                ButtonsList.add("F");// Add button into button list as clicked
                 }
    }
    
    
    private void BButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BButtonActionPerformed
        // TODO add your handling code here:
        jTextNotePlayed.setText("B");
        Bsound();

    }//GEN-LAST:event_BButtonActionPerformed

    private void Bsound(){
                
          if (PianoCheck.isSelected())      {
         try{
             File musicPath = new File("C:\\Users\\Rohan_nu3d8wo\\OneDrive\\Documents\\NetBeansProjects\\Piano_Project\\src\\Piano_Keyboard\\B.wav");
             
             if(musicPath.exists()){
                 
                 AudioInputStream aduioInput = AudioSystem.getAudioInputStream(musicPath);
                 Clip clip = AudioSystem.getClip();
                 clip.open(aduioInput);
                 clip.start();
                
                 
                 
             }else
             {
                 System.out.println("Cant Find File"); //Cant find file
             }
             
         }
         catch(Exception e){
             JOptionPane.showMessageDialog(null,e);
         }
        }
          
              if (DrumCheck.isSelected() )
        {
         try{
             File musicPath = new File("C:\\Users\\Rohan_nu3d8wo\\OneDrive\\Documents\\NetBeansProjects\\Piano_Project\\src\\Piano_Keyboard\\RB.wav"); // Opens C.wav audio file
             
             if(musicPath.exists()){
                 
                 AudioInputStream aduioInput = AudioSystem.getAudioInputStream(musicPath);
                 Clip clip = AudioSystem.getClip();
                 clip.open(aduioInput);
                 clip.start();
                 
                 
                 
                 
             }else
             {
                 System.out.println("Cant Find File"); //Cant find file
             }
             
         }
         catch(Exception e){
             JOptionPane.showMessageDialog(null,e);
         }
        }
               if (state == true){
                ButtonsList.add("B");// Add button into button list as clicked
                 }
    }
    
    private void GButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GButtonActionPerformed
        // TODO add your handling code here:
        jTextNotePlayed.setText("G");
        Gsound();
        
    }//GEN-LAST:event_GButtonActionPerformed

    private void Gsound(){                                        
        // TODO add your handling code here:
          if (PianoCheck.isSelected())      {
         try{
             File musicPath = new File("C:\\Users\\Rohan_nu3d8wo\\OneDrive\\Documents\\NetBeansProjects\\Piano_Project\\src\\Piano_Keyboard\\G.wav");
             
             if(musicPath.exists()){
                 
                 AudioInputStream aduioInput = AudioSystem.getAudioInputStream(musicPath);
                 Clip clip = AudioSystem.getClip();
                 clip.open(aduioInput);
                 clip.start();
                
                 
                 
             }else
             {
                 System.out.println("Cant Find File"); //Cant find file
             }
             
         }
         catch(Exception e){
             JOptionPane.showMessageDialog(null,e);
         }
        }
          
               if (DrumCheck.isSelected() )
        {
         try{
             File musicPath = new File("C:\\Users\\Rohan_nu3d8wo\\OneDrive\\Documents\\NetBeansProjects\\Piano_Project\\src\\Piano_Keyboard\\RG.wav"); // Opens C.wav audio file
             
             if(musicPath.exists()){
                 
                 AudioInputStream aduioInput = AudioSystem.getAudioInputStream(musicPath);
                 Clip clip = AudioSystem.getClip();
                 clip.open(aduioInput);
                 clip.start();
                 
                 
                 
                 
                 
             }else
             {
                 System.out.println("Cant Find File"); //Cant find file
             }
             
         }
         catch(Exception e){
             JOptionPane.showMessageDialog(null,e);
         }
        }
               if (state == true){
                ButtonsList.add("G");// Add button into button list as clicked
                 }
    }
    
    private void GSharpButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GSharpButtonActionPerformed
        // TODO add your handling code here:
        jTextNotePlayed.setText("G#");
         GSsound();
    }//GEN-LAST:event_GSharpButtonActionPerformed
    
    private void GSsound(){                                             
        // TODO add your handling code here:
          if (PianoCheck.isSelected())      {
         try{
             File musicPath = new File("C:\\Users\\Rohan_nu3d8wo\\OneDrive\\Documents\\NetBeansProjects\\Piano_Project\\src\\Piano_Keyboard\\G#.wav");
             
             if(musicPath.exists()){
                 
                 AudioInputStream aduioInput = AudioSystem.getAudioInputStream(musicPath);
                 Clip clip = AudioSystem.getClip();
                 clip.open(aduioInput);
                 clip.start();
                 
                 
                 
             }else
             {
                 System.out.println("Cant Find File"); //Cant find file
             }
             
         }
         catch(Exception e){
             JOptionPane.showMessageDialog(null,e);
         }
        }
          
               if (DrumCheck.isSelected() )
        {
         try{
             File musicPath = new File("C:\\Users\\Rohan_nu3d8wo\\OneDrive\\Documents\\NetBeansProjects\\Piano_Project\\src\\Piano_Keyboard\\RG#.wav"); // Opens C.wav audio file
             
             if(musicPath.exists()){
                 
                 AudioInputStream aduioInput = AudioSystem.getAudioInputStream(musicPath);
                 Clip clip = AudioSystem.getClip();
                 clip.open(aduioInput);
                 clip.start();
                 
                 
                 
                 
                 
             }else
             {
                 System.out.println("Cant Find File"); //Cant find file
             }
             
         }
         catch(Exception e){
             JOptionPane.showMessageDialog(null,e);
         }
        }
               if (state == true){
                ButtonsList.add("G#");// Add button into button list as clicked
                 }
    }
    
    private void ASharpButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ASharpButtonActionPerformed
        // TODO add your handling code here:
        jTextNotePlayed.setText("A#");
        ASsound();
    }//GEN-LAST:event_ASharpButtonActionPerformed

    private void ASsound(){                                             
        // TODO add your handling code here:
          if (PianoCheck.isSelected())      {
         try{
             File musicPath = new File("C:\\Users\\Rohan_nu3d8wo\\OneDrive\\Documents\\NetBeansProjects\\Piano_Project\\src\\Piano_Keyboard\\A#.wav");
             
             if(musicPath.exists()){
                 
                 AudioInputStream aduioInput = AudioSystem.getAudioInputStream(musicPath);
                 Clip clip = AudioSystem.getClip();
                 clip.open(aduioInput);
                 clip.start();
                 
                 
                 
             }else
             {
                 System.out.println("Cant Find File"); //Cant find file
             }
             
         }
         catch(Exception e){
             JOptionPane.showMessageDialog(null,e);
         }
        }
              if (DrumCheck.isSelected() )
        {
         try{
             File musicPath = new File("C:\\Users\\Rohan_nu3d8wo\\OneDrive\\Documents\\NetBeansProjects\\Piano_Project\\src\\Piano_Keyboard\\RA#.wav"); // Opens C.wav audio file
             
             if(musicPath.exists()){
                 
                 AudioInputStream aduioInput = AudioSystem.getAudioInputStream(musicPath);
                 Clip clip = AudioSystem.getClip();
                 clip.open(aduioInput);
                 clip.start();
                 
                 
                 
                 
                 
             }else
             {
                 System.out.println("Cant Find File"); //Cant find file
             }
             
         }
         catch(Exception e){
             JOptionPane.showMessageDialog(null,e);
         }
        }
               if (state == true){
                ButtonsList.add("A#");// Add button into button list as clicked
                 }
    }
    
    private void AButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AButtonActionPerformed
        // TODO add your handling code here:
        //jTextNotePlayed.setText("A");
          Asound();
    }//GEN-LAST:event_AButtonActionPerformed

    private void Asound() {                                        
        // TODO add your handling code here:
        
          if (PianoCheck.isSelected())      {
         try{
             File musicPath = new File("C:\\Users\\Rohan_nu3d8wo\\OneDrive\\Documents\\NetBeansProjects\\Piano_Project\\src\\Piano_Keyboard\\A.wav");
             
             if(musicPath.exists()){
                 
                 AudioInputStream aduioInput = AudioSystem.getAudioInputStream(musicPath);
                 Clip clip = AudioSystem.getClip();
              
                 clip.open(aduioInput);
                 clip.start();
                 jTextNotePlayed.setText("A");
                 
                 
                 
             }else
             {
                 System.out.println("Cant Find File"); //Cant find file
             }
             
         }
         catch(Exception e){
             JOptionPane.showMessageDialog(null,e);
         }
        }
          
               if (DrumCheck.isSelected() )
        {
         try{
             File musicPath = new File("C:\\Users\\Rohan_nu3d8wo\\OneDrive\\Documents\\NetBeansProjects\\Piano_Project\\src\\Piano_Keyboard\\RA.wav"); // Opens C.wav audio file
             
             if(musicPath.exists()){
                 
                 AudioInputStream aduioInput = AudioSystem.getAudioInputStream(musicPath);
                 Clip clip = AudioSystem.getClip();
                 clip.open(aduioInput);
                 clip.start();
                 
                 
           
                 
                 
             }else
             {
                 System.out.println("Cant Find File"); //Cant find file
             }
             
         }
         catch(Exception e){
             JOptionPane.showMessageDialog(null,e);
         }
        }
               if (state == true){
                ButtonsList.add("A");// Add button into button list as clicked
                 }
    }
    
    private void RecordBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RecordBActionPerformed
        // TODO add your handling code here:
        
        state = true;
        
        Thread t = new Thread(){
        public void run(){
            
            for(;;)
            {
                if(state == true)
                {
                    try
                    {
                       sleep(1);
                       
                       if(miliSec>1000)
                       {
                           miliSec = 0;
                           sec++;
                       }
                       if(sec>60)
                       {
                           miliSec = 0;
                           sec=0;
                           min++;
                       }
                       if(min>60)
                       {
                           miliSec = 0;
                           sec=0;
                           min = 0;
                           hour++;
                       }
                       MSec.setText(" : " + miliSec );
                       miliSec++;
                        Sec.setText(" : " + sec );
                         Min.setText(" : " + min );
                          Hour.setText("" + hour );
                    }
                    catch(Exception e)
                    {
                        
                    }
                }
                else
                {
                    break;
                }
            }
        }
    };
    t.start();
        
        
        
    }//GEN-LAST:event_RecordBActionPerformed

    private void PauseBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PauseBActionPerformed
        // TODO add your handling code here:
        state = false;
        
        
    }//GEN-LAST:event_PauseBActionPerformed

    private void StopBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_StopBActionPerformed
        // TODO add your handling code here:
        state = false;
        hour = 0;
        min=0;
        sec=0;
        miliSec=0;
        
        Hour.setText("00 : ");
        Min.setText("00 : ");
        Sec.setText("00 : ");
        MSec.setText("00");
        
        //System.out.println(ButtonsList);
    }//GEN-LAST:event_StopBActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        int X = Integer.parseInt(jTextms.getText());
        
        if (jTextms.getText() == ""){
            X = 1500;
        }
        
        
        for(String Pkey : ButtonsList)  {
    try {
        
        Thread.sleep(X);
    } catch(InterruptedException ie) {}
            //for (String Pkey : ButtonsList){
            if (Pkey.equals("A"))
            {
              jTextNotePlayed.setText("A");
              Asound(); 
              
              
            }
            
        
            if (Pkey.equals("A#"))
            {
             jTextNotePlayed.setText("A#");
             ASsound();
            }
            
            if (Pkey.equals("B"))
            {
             jTextNotePlayed.setText("B");
             Bsound();
            }

            if (Pkey.equals("C"))
            {
              jTextNotePlayed.setText("C");
              Csound();          
            }
            
        
            if (Pkey.equals("C#"))
            {
             jTextNotePlayed.setText("C#");
             CSsound();
            }
            
            if (Pkey.equals("D"))
            {
             jTextNotePlayed.setText("D");
             Dsound();
            }
            if (Pkey.equals("D#"))
            {
             jTextNotePlayed.setText("D#");
             DSsound();
            }     
            if (Pkey.equals("F"))
            {
             jTextNotePlayed.setText("F");
             Fsound();
            }

            if (Pkey.equals("F#"))
            {
              jTextNotePlayed.setText("F#");
              FSsound();          
            }
            
        
            if (Pkey.equals("E"))
            {
             jTextNotePlayed.setText("E");
             Esound();
            }
            
            if (Pkey.equals("G"))
            {
             jTextNotePlayed.setText("G");
             Gsound();
            }
            if (Pkey.equals("G#"))
            {
             jTextNotePlayed.setText("G#");
             GSsound();
            }  
            if (Pkey.equals(" "))
            {
             jTextNotePlayed.setText(" ");
            }  
                
            //System.out.println(Pkey);
            
        };



        
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        ButtonsString();
        
        try{
            Class.forName("com.mysql.jdbc.Driver");
            sqlConn = DriverManager.getConnection(dataConn,username,password);
            pst = sqlConn.prepareStatement("insert into connector1(SongName,ArtistName,SongNotes)value(?,?,?)");
            
            pst.setString(1, jTextMusicName.getText());
            pst.setString(2, jTextName.getText());
            pst.setString(3, StrButtonsListb);
            
            pst.executeUpdate();
            JOptionPane.showMessageDialog(this, "Recording added");
            upDateDB();
        }
        catch (SQLException ex) {
            // handle any errors
            System.out.println("Exception: " + ex.getLocalizedMessage());
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(TestDBConnection.class.getName()).log(Level.SEVERE, null, ex);
        } 
        
        //jTextMusicName.setText("");
        //jTextName.setText("");
    }//GEN-LAST:event_jButton1ActionPerformed

    private void ButtonsString(){
        StringBuilder sb = new StringBuilder();
        StringBuilder b = new StringBuilder();
        for (String Pkey : ButtonsList)
        {

            if (Pkey.equals("A"))
            {
              sb.append("a");
              b.append(Pkey+",");
            }
            
        
            if (Pkey.equals("A#"))
            {
             sb.append("A");
             b.append(Pkey+",");
            }
            
            if (Pkey.equals("B"))
            {
             sb.append("b");
             b.append(Pkey+",");
            }

            if (Pkey.equals("C"))
            {
              sb.append("c"); 
              b.append(Pkey+",");
            }
            
        
            if (Pkey.equals("C#"))
            {
             sb.append("C");
             b.append(Pkey+",");
            }
            
            if (Pkey.equals("D"))
            {
             sb.append("d");
             b.append(Pkey+",");
            }
            if (Pkey.equals("D#"))
            {
             sb.append("D");
             b.append(Pkey+",");
            }     
            if (Pkey.equals("F"))
            {
             sb.append("f");
             b.append(Pkey+",");
            }

            if (Pkey.equals("F#"))
            {
              sb.append("F");
              b.append(Pkey+",");
            }           
        
            if (Pkey.equals("E"))
            {
             sb.append("e");
             b.append(Pkey+",");
            }
            
            if (Pkey.equals("G"))
            {
             sb.append("g");
             b.append(Pkey+",");
            }
            if (Pkey.equals("G#"))
            {
             sb.append("G");
             b.append(Pkey+",");
            }  
            if (Pkey.equals(" "))
            {
             sb.append(" ");
             b.append(Pkey+",");
            }  
        } 
        StrButtonsListsb = sb.toString();
        //System.out.println(StrButtonsListsb);
        
        StrButtonsListb = b.toString();
        //System.out.println(StrButtonsListb);
    }
    
    private void STRtoARRButtons(String StrButtonsListb1){
        ButtonsList.removeAll(ButtonsList);
        
        String s = StrButtonsListb1;
        ButtonsList = new ArrayList<String>(Arrays.asList(s.split(",")));
        //System.out.println(ButtonsList);
    }
            
    private void ASharpButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ASharpButton1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ASharpButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        jTextNotePlayed.setText(" ");
                if (state == true){
                ButtonsList.add(" ");// Add button into button list as clicked
                 }
        
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        ButtonsList.removeAll(ButtonsList);
        
    }//GEN-LAST:event_jButton4ActionPerformed

    private JFrame frame;
    private void EXITBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EXITBActionPerformed
        // TODO add your handling code here:
        frame = new JFrame("Exit");
        if(JOptionPane.showConfirmDialog(frame, "Confirm if you want to exit","MySQL cmpsc221", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION)
        {
            System.exit(0);
        }
    }//GEN-LAST:event_EXITBActionPerformed

    
    
    
    
    
    
    
    
    
    
    private void UPDATEBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UPDATEBActionPerformed
        // TODO add your handling code here:
        
        DefaultTableModel RecordTable = (DefaultTableModel)jTable1.getModel();
        int SelectedRows = jTable1.getSelectedRow();
        

        try{
            Class.forName("com.mysql.jdbc.Driver");
            sqlConn = DriverManager.getConnection(dataConn,username,password);
            pst = sqlConn.prepareStatement("update connector1 set  SongName =?,ArtistName =?, SongNotes = ? where id = ?");//ID=?,
            
            //pst.setString(1, jTextID.getText());
            pst.setString(1, jTextMusicName.getText());
            pst.setString(2, jTextName.getText());
            pst.setString(3, StrButtonsListb);
            
            pst.executeUpdate();
            JOptionPane.showMessageDialog(this, "Recording Updated");
            upDateDB();
        }
        catch (SQLException ex) {
            // handle any errors
            System.out.println("Exception: " + ex.getLocalizedMessage());
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(TestDBConnection.class.getName()).log(Level.SEVERE, null, ex);
        } 
    }//GEN-LAST:event_UPDATEBActionPerformed

    
    
    
    
    
    
    
    
    
    
    
    
    
    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // TODO add your handling code here:
        DefaultTableModel RecordTable = (DefaultTableModel)jTable1.getModel();
        int SelectedRows = jTable1.getSelectedRow(); 
        
        jTextMusicName.setText(RecordTable.getValueAt(SelectedRows, 1).toString());
        jTextName.setText(RecordTable.getValueAt(SelectedRows, 2).toString());
        StrButtonsListb = (RecordTable.getValueAt(SelectedRows, 3).toString());
        STRtoARRButtons(StrButtonsListb);
        
    }//GEN-LAST:event_jTable1MouseClicked

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    private void DELETEBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DELETEBActionPerformed
        // TODO add your handling code here:
        DefaultTableModel RecordTable = (DefaultTableModel)jTable1.getModel();
        int SelectedRows = jTable1.getSelectedRow();
        
        try
        {
            id = Integer.parseInt(RecordTable.getValueAt(SelectedRows, 0).toString());
            deleteItem = JOptionPane.showConfirmDialog(null, "Are you sure you want to delete this item?","Warning",JOptionPane.YES_NO_OPTION);
            if(deleteItem == JOptionPane.YES_OPTION)
            {
              Class.forName("com.mysql.jdbc.Driver");
              sqlConn = DriverManager.getConnection(dataConn,username,password);
              pst = sqlConn.prepareStatement("delete from connector1 where id = ?");
              
              pst.setInt(1,id);
              pst.executeUpdate();
              JOptionPane.showMessageDialog(this,"Recordings updated");
              upDateDB();
              
              //jTextID.setText("");
              //jTextID.requestFocus();
              jTextMusicName.setText("");
              jTextName.setText("");
            }
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Piano_Keys.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(Piano_Keys.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_DELETEBActionPerformed

    private void jTextMusicNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextMusicNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextMusicNameActionPerformed

    private void jTextmsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextmsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextmsActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        ButtonsString();
        jTextNote.setText(StrButtonsListb);
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jTextNotePlayedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextNotePlayedActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextNotePlayedActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Piano_Keys.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Piano_Keys.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Piano_Keys.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Piano_Keys.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Piano_Keys().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AButton;
    private javax.swing.JButton ASharpButton;
    private javax.swing.JButton ASharpButton1;
    private javax.swing.JButton BButton;
    private javax.swing.JButton CButton;
    private javax.swing.JButton CSharpButton;
    private javax.swing.JButton DButton;
    private javax.swing.JButton DELETEB;
    private javax.swing.JButton DSharpButton;
    private javax.swing.JCheckBox DrumCheck;
    private javax.swing.JButton EButton;
    private javax.swing.JButton EXITB;
    private javax.swing.JButton FButton;
    private javax.swing.JButton FSharpButton;
    private javax.swing.JButton GButton;
    private javax.swing.JButton GSharpButton;
    private javax.swing.JLabel Hour;
    private javax.swing.JLabel MSec;
    private javax.swing.JLabel Min;
    private javax.swing.JButton PauseB;
    private javax.swing.JCheckBox PianoCheck;
    private javax.swing.JButton RecordB;
    private javax.swing.JLabel Sec;
    private javax.swing.JButton StopB;
    private javax.swing.JButton UPDATEB;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextMusicName;
    private javax.swing.JTextField jTextName;
    private javax.swing.JTextField jTextNote;
    private javax.swing.JTextField jTextNotePlayed;
    private javax.swing.JTextField jTextms;
    // End of variables declaration//GEN-END:variables
}
